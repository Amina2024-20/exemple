import pandas as pd
import streamlit as st

st.set_page_config(page_title="üìä Seuils par mois et location", layout="wide")

st.title("üìà Analyse des Seuils par Mois et Functional Location")

# üì• Uploader fichier Excel
uploaded_file = st.file_uploader("üì§ Importer un fichier Excel contenant les notifications", type=["xlsx"])

if uploaded_file:
    # Charger les donn√©es
    df = pd.read_excel(uploaded_file)

    # V√©rifier colonnes n√©cessaires
    if 'Notification date' in df.columns and 'Functional location' in df.columns:
        # Nettoyage et pr√©paration
        df['Notification date'] = pd.to_datetime(df['Notification date'], errors='coerce')
        df['Ann√©e-Mois'] = df['Notification date'].dt.to_period('M').astype(str)
        df['LocShort'] = df['Functional location'].astype(str).str[:6]  # premiers 6 caract√®res

        # Notifications par mois et FL
        notif_par_mois_fl = df.groupby(['Ann√©e-Mois', 'LocShort']).size().reset_index(name='Nb_notifications')

        # Calcul du seuil = moyenne des notifications par FL et mois
        seuils = notif_par_mois_fl.groupby(['LocShort', 'Ann√©e-Mois'])['Nb_notifications'].mean().reset_index()
        seuils.rename(columns={'Nb_notifications': 'Seuil'}, inplace=True)

        # Fusion des donn√©es
        df_final = notif_par_mois_fl.merge(seuils, on=['LocShort', 'Ann√©e-Mois'])

        # Marquer anomalie si d√©passement du seuil
        df_final['Anomalie'] = df_final['Nb_notifications'] > df_final['Seuil']

        # Calcul moyenne totale (globale) par FL sur toute la p√©riode
        nb_mois = df['Ann√©e-Mois'].nunique()
        total_notifications_par_fl = df.groupby('LocShort').size().reset_index(name='Total_notifications')
        total_notifications_par_fl['Moyenne_totale'] = total_notifications_par_fl['Total_notifications'] / nb_mois

        # Affichage des r√©sultats
        st.success("‚úÖ Analyse termin√©e avec succ√®s !")
        st.markdown("### Tableau des notifications mensuelles avec seuils et anomalies")
        st.dataframe(df_final)

        st.markdown("### Moyenne totale (globale) des notifications par Functional Location")
        st.dataframe(total_notifications_par_fl)

        # Choix Functional Location
        st.markdown("### Visualisation des seuils par mois pour chaque Functional Location")
        fl_list = df_final['LocShort'].unique()
        fl_selected = st.selectbox("Choisir une Functional Location", fl_list)

        df_fl = df_final[df_final['LocShort'] == fl_selected].set_index('Ann√©e-Mois')
        st.line_chart(df_fl[['Nb_notifications', 'Seuil']])

        # Nouvelle partie : afficher moyenne totale pour la FL s√©lectionn√©e
        moyenne_fl = total_notifications_par_fl.loc[total_notifications_par_fl['LocShort'] == fl_selected, 'Moyenne_totale'].values
        if len(moyenne_fl) > 0:
            st.markdown(f"#### Moyenne totale pour la Functional Location **{fl_selected}** sur toute la p√©riode : **{moyenne_fl[0]:.2f}**")
        else:
            st.markdown("Aucune donn√©e pour cette Functional Location.")

    else:
        st.error("‚ùå Le fichier doit contenir les colonnes 'Notification date' et 'Functional location'")
else:
    st.info("üìÅ Veuillez importer un fichier Excel contenant les notifications.")
